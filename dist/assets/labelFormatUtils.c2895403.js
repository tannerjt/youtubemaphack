import{s as m,kl as y,al as h,km as w,f as p,kn as v,fU as b,ko as x,kp as _,kq as k}from"./index.768d9708.js";const d=m.getLogger("esri.layers.support.labelFormatUtils"),g={type:"simple",evaluate:()=>null},E={getAttribute:(a,s)=>a.field(s)};async function L(a,s,e){if(!a||!a.symbol)return g;const t=a.where,l=y(a),i=t?await h(()=>import("./WhereClause.da3ca9f9.js"),["assets/WhereClause.da3ca9f9.js","assets/index.768d9708.js","assets/index.c493d9f8.css"]):null;let o;if(l.type==="arcade"){const n=await w(l.expression,e,s);o={type:"arcade",evaluate(u){try{const r=n.evaluate({$feature:"attributes"in u?n.repurposeFeature(u):u});if(r!=null)return r.toString()}catch{d.error(new p("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:u,expression:l}))}return null},needsHydrationToEvaluate:()=>_(l.expression)==null}}else o={type:"simple",evaluate:n=>l.expression.replace(/{[^}]*}/g,u=>{const r=u.slice(1,-1),c=s.get(r);if(!c)return u;let f=null;return"attributes"in n?n&&n.attributes&&(f=n.attributes[c.name]):f=n.field(c.name),f==null?"":F(f,c)})};if(t){let n;try{n=i.WhereClause.create(t,s)}catch(r){return d.error(new p("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:t,error:r})),g}const u=o.evaluate;o.evaluate=r=>{const c="attributes"in r?void 0:E;try{if(n.testFeature(r,c))return u(r)}catch(f){d.error(new p("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:t,feature:r,error:f}))}return null}}return o}function F(a,s){if(a==null)return"";const e=s.domain;if(e){if(e.type==="codedValue"||e.type==="coded-value"){const l=a;for(const i of e.codedValues)if(i.code===l)return i.name}else if(e.type==="range"){const l=+a,i="range"in e?e.range[0]:e.minValue,o="range"in e?e.range[1]:e.maxValue;if(i<=l&&l<=o)return e.name}}let t=a;return s.type==="date"||s.type==="esriFieldTypeDate"?t=v(t,k("short-date")):b(s)&&(t=x(+t)),t||""}export{L as createLabelFunction,F as formatField};
